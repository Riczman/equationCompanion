[{"D:\\WebDevWidgets\\React\\firstapp\\src\\index.js":"1"},{"size":11830,"mtime":1611079424352,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"niemwc","D:\\WebDevWidgets\\React\\firstapp\\src\\index.js",["7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nconst { evaluate } = require('mathjs');\r\nconst MongoClient = require('mongodb').MongoClient;\r\n\r\nvar operations = ['cos', 'sin', 'tg', 'ctg','sqrt'];\r\n\r\nvar lightGray1 = \"#ebebeb\";\r\nvar darkGray1 = \"#969696\";\r\n\r\nvar lightBlue1 = \"#03bafc\";\r\nvar darkLightBlue1 = \"#0085b5\";\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tpage: 0,\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<>\r\n\t\t\t<nav>\r\n\t\t\t\t<TopMenu/>\r\n\t\t\t</nav>\r\n\t\t\t<main>\r\n\t\t\t\t<div class=\"mainContainer\">\r\n\t\t\t\t\t<div class=\"mainCard\">\r\n\t\t\t\t\t\t<EquationEditor id=\"A\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"typeSelector\">\r\n\t\t\t\t\t\t<TypeSelector/>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass InputField extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tid: props.id,\r\n\t\t\tnum: null,\r\n\t\t\tnumLength: 0,\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<>\r\n\t\t\t<div class=\"additionSymboll\">{(this.props.id).substring((this.props.id).indexOf(\"_\")+1)+\" :\"}</div>\r\n\t\t\t<input class=\"inputField\" rows='1' id={\"field\"+this.props.id} ></input>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nclass EquationEditor extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\teq: \"\",\r\n\t\t\tnumberOfVars: 0,\r\n\t\t\tfieldsArray: [],\r\n\t\t\tisOutReady: false,\r\n\t\t\tout: null,\r\n\t\t}\r\n\t}\r\n\t\r\n\tcalculateEquation(){\r\n\t\tlet isReady = 1;\r\n\t\tlet out = 0;\r\n\t\tthis.state.fieldsArray.forEach((id) => {\r\n\t\t\tconsole.log(id);\r\n\t\t\tif(isNaN(parseFloat(document.getElementById(\"field\"+id).value)))\r\n\t\t\t{\r\n\t\t\t\tisReady = 0;\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(isReady == 1)\r\n\t\t{\r\n\r\n\t\t\tlet scope = {};\r\n\t\t\tthis.state.fieldsArray.forEach((id) => {\r\n\t\t\t\tscope[id.substring(2)] = document.getElementById(\"field\"+id).value;\r\n\t\t\t});\r\n\t\t\tconsole.log(scope);\r\n\t\t\tconsole.log(this.state.eq);\r\n\t\t\tlet out = evaluate(this.state.eq, scope);\r\n\t\t\tthis.setState({\r\n\t\t\t\teq: this.state.eq,\r\n\t\t\t\tnumberOfVars: this.state.numberOfVars,\r\n\t\t\t\tfieldsArray: this.state.fieldsArray,\r\n\t\t\t\tisOutReady: true,\r\n\t\t\t\tout: out,\r\n\t\t\t});\r\n\t\t}\r\n\t\tconsole.log(isReady);\r\n\t}\r\n\t\r\n\tswapSymbols(){\r\n\t\tlet equation = this.state.eq;\r\n\t\t\r\n\t\tfor(var i = 0; i < this.state.numberOfVars; i++)\r\n\t\t{\r\n\t\t\tlet localId = this.state.fieldsArray[i].substring(this.state.fieldsArray[i].indexOf(this.props.id + \"_\")+2);\r\n\t\t\tconsole.log(localId);\r\n\t\t\tequation = equation.substring(0, equation.indexOf(localId)) + document.getElementById(\"field\" + this.state.fieldsArray[i]).value + equation.substring(equation.indexOf(localId)+localId.length);\r\n\t\t\tconsole.log(equation);\r\n\t\t}\r\n\t\t\r\n\t\treturn equation;\r\n\t}\r\n\t\r\n\tparseEquation(bracketString){\r\n\t\tconsole.log(bracketString+\"-----------------------\");\r\n\t\tlet equation = bracketString;\r\n\t\tlet arrayOfSymbols = [];\r\n\t\tlet numberOfSymbols = 0;\r\n\t\tconsole.log(this.state);\r\n\t\twhile(bracketString.length >= 1)\r\n\t\t{\r\n\t\t\tlet singleOp = bracketString.substring(0,1);\r\n\t\t\tconsole.log(singleOp);\r\n\t\t\tif(singleOp > '0' && singleOp < '9' )\r\n\t\t\t{\r\n\t\t\t\tconsole.log(\"number found\");\r\n\t\t\t\tlet number1 = bracketString.match(/\\d+/)[0];\r\n\t\t\t\tbracketString = bracketString.substring(bracketString.match(/\\d+/)[0].length);\r\n\t\t\t}else if(singleOp == '+' || singleOp == '-' || singleOp == '*' || singleOp == '/')\r\n\t\t\t{\r\n\t\t\t\tconsole.log(\"operator found\");\r\n\t\t\t\tbracketString = bracketString.substring(1);\r\n\t\t\t} else if(singleOp.match(/[a-zA-Z]*/)[0].length>0){\r\n\t\t\t\tconsole.log(\"symbol found\");\r\n\t\t\t\tif(operations.indexOf(bracketString.match(/[a-zA-Z]*/)[0]) == -1)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet id = bracketString.match(/[a-zA-Z]*/)[0];\r\n\t\t\t\t\tarrayOfSymbols[numberOfSymbols] = this.props.id + \"_\" + id;\r\n\t\t\t\t\tnumberOfSymbols = numberOfSymbols + 1;\r\n\t\t\t\t}\r\n\t\t\t\tbracketString = bracketString.substring(bracketString.match(/[a-zA-Z]*/)[0].length);\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tbracketString = bracketString.substring(1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\teq: equation,\r\n\t\t\tnumberOfVars: numberOfSymbols,\r\n\t\t\tfieldsArray: arrayOfSymbols,\r\n\t\t\tisOutReady: false,\r\n\t\t\tout: null,\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\trenderInputFields(){\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t{\r\n\t\t\tif(this.state.numberOfVars != 0)\r\n\t\t\t{\r\n\t\t\t\treturn(this.state.fieldsArray.map((id) => (<InputField id={id}></InputField>)));\r\n\t\t\t}else{\r\n\t\t\t\treturn(<div class=\"inputFieldsPlaceholder\">Input fields for variables used in equation will appear here</div>);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\trenderOutput(){\r\n\t\treturn(\r\n\t\t<>\r\n\t\t{\r\n\t\t\tthis.state.out\r\n\t\t}\r\n\t\t</>\r\n\t\t);\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t<>\r\n\t\t<div class=\"editorContainer\">\r\n\t\t\t<div class=\"row1\">\r\n\t\t\t\t<div class=\"eqLabel\">Equation :</div>\r\n\t\t\t\t<div class=\"outputLabel\">Output :</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row2\">\r\n\t\t\t\t<textarea class=\"mainEqEditor\" id=\"mainEqEditor\" placeholder=\"Type in your equation\" onChange={(e) => {this.parseEquation(e.target.value)}} onClick = {(e) => {this.parseEquation(e.target.value)}}></textarea>\r\n\t\t\t\t<button class=\"calcBtn\" onClick={() => {this.calculateEquation()}}>Calculate</button>\r\n\t\t\t\t<div class=\"eqOutput\">{this.renderOutput()}</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div class=\"row5\">\t\r\n\t\t\t\t<div class=\"column_1\">\r\n\t\t\t\t\t<div class=\"inputFieldsLabel\">Variables inputs :</div>\r\n\t\t\t\t\t{this.renderInputFields()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass TypeSelector extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttype: 1,\r\n\t\t\tisAnimRunning: 0,\r\n\t\t\tformulas: {},\r\n\t\t\tisDbReady: 0,\r\n\t\t\tmathListArray:[],\r\n\t\t\tphysicsListArray:[],\r\n\t\t\tcustomListArray:[]\r\n\t\t}\r\n\r\n\t\tthis.getFormulas();\r\n\t}\r\n\t\r\n\tsetType(typeNr)\r\n\t{\r\n\t\tlet prevType = this.state.type;\r\n\t\tif(prevType != typeNr && this.state.isAnimRunning != 1)\r\n\t\t{\r\n\t\t\tthis.state.isAnimRunning = 1;\r\n\t\t\tdocument.getElementById(\"sel\"+prevType+\"Container\").style.height = \"60px\";\r\n\t\t\tsetTimeout((typeNr) => { \r\n\t\t\t\tdocument.getElementById(\"sel\"+prevType+\"Container\").style.backgroundColor = \"#969696\";\r\n\t\t\t\tdocument.getElementById(\"sel\"+prevType).style.backgroundColor = \"#ebebeb\";\r\n\t\t\t\tdocument.getElementById(\"sel\"+prevType+\"Container\").style.zIndex = 1;\r\n\t\t\t\tdocument.getElementById(\"sel\"+typeNr+\"Container\").style.backgroundColor = \"#0085b5\";\r\n\t\t\t\tdocument.getElementById(\"sel\"+typeNr).style.backgroundColor = \"#03bafc\";\r\n\t\t\t\tdocument.getElementById(\"sel\"+typeNr+\"Container\").style.zIndex = 2;\r\n\t\t\t\tdocument.getElementById(\"sel\"+typeNr+\"Container\").style.height = \"80px\";\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttype: typeNr,\r\n\t\t\t\t\tisAnimRunning: 0\r\n\t\t\t\t});\r\n\t\t\t}, 500, typeNr);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tgetFormulas(){\r\n\t\t\r\n\t\tfetch('./dataBase/formulasBd.json')\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tformulas: data,\r\n\t\t\t\tisDbReady: 1\r\n\t\t\t});\r\n\t\t\tconsole.log(this.state.formulas);\r\n\t\t\tlet formulasArr = this.state.formulas.mathFormulas.formulas;\r\n\t\t\tlet mathArr = [];\r\n\t\t\tlet physicsArr = [];\r\n\t\t\tlet customArr = [];\r\n\t\t\tfor(var i = 0; i < formulasArr.length; i++)\r\n\t\t\t{\r\n\t\t\t\tmathArr.push(<EquationFormula key={\"mathFormula\"+i} name={formulasArr[i].name} formula={formulasArr[i].formula} description={formulasArr[i].description}></EquationFormula>);\r\n\t\t\t}\r\n\t\t\tformulasArr = this.state.formulas.physicsFormulas.formulas;\r\n\t\t\tfor(var i = 0; i < formulasArr.length; i++)\r\n\t\t\t{\r\n\t\t\t\tphysicsArr.push(<EquationFormula key={\"physicsFormula\"+i} name={formulasArr[i].name} formula={formulasArr[i].formula} description={formulasArr[i].description}></EquationFormula>);\r\n\t\t\t}\r\n\t\t\tformulasArr = this.state.formulas.customFormulas.formulas;\r\n\t\t\tfor(var i = 0; i < formulasArr.length; i++)\r\n\t\t\t{\r\n\t\t\t\tcustomArr.push(<EquationFormula key={\"customFormula\"+i} name={formulasArr[i].name} formula={formulasArr[i].formula} description={formulasArr[i].description}></EquationFormula>);\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tmathListArray: mathArr,\r\n\t\t\t\tphysicsListArray: physicsArr,\r\n\t\t\t\tcustomListArray: customArr\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\trenderSelection()\r\n\t{\r\n\t\tif(this.state.type == 1)\r\n\t\t{\r\n\t\t\treturn(\r\n\t\t\t<>\r\n\t\t\t\t{this.state.mathListArray}\r\n\t\t\t</>);\r\n\t\t\t\r\n\t\t}else if(this.state.type == 2)\r\n\t\t{\r\n\t\t\treturn(\r\n\t\t\t<>\r\n\t\t\t\t{this.state.physicsListArray}\r\n\t\t\t</>);\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\treturn(\r\n\t\t\t<>\r\n\t\t\t\t{this.state.customListArray}\r\n\t\t\t</>);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\t\t\r\n\t\treturn(\r\n\t\t<div class=\"selectorContainer\">\r\n\t\t\t<div class=\"selectorRow\">\r\n\t\t\t\t<div class=\"mathSelectorContainer\" id=\"sel1Container\" onClick={() => {this.setType(1)}}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"mathSelector\" id=\"sel1\">\r\n\t\t\t\t\t\tMath\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"physicsSelectorContainer\" id=\"sel2Container\" onClick={() => {this.setType(2)}}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"physicsSelector\" id=\"sel2\">\r\n\t\t\t\t\t\tPhysics\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"customSelecttorContainer\" id=\"sel3Container\" onClick={() => {this.setType(3)}}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"customSelecttor\" id=\"sel3\">\r\n\t\t\t\t\t\tCustom\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"listWrapper\">\r\n\t\t\t\t<div class=\"mathListContainer\">\r\n\t\t\t\t\t{this.renderSelection()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n\t\r\n\t\t\r\n\t}\r\n}\r\n\t\r\n\r\nclass EquationFormula extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\tname: this.props.name,\r\n\t\t\tformula: this.props.formula,\r\n\t\t\tdescription: this.props.description\r\n\t\t};\r\n\t\tthis.insertFormula = this.insertFormula.bind(this);\r\n\t}\r\n\r\n\tinsertFormula(){\r\n\t\tconsole.log(this.state.formula);\r\n\t\tvar equationEditor = document.getElementById(\"mainEqEditor\");\r\n\t\tequationEditor.value = equationEditor.value.substring(0,equationEditor.selectionStart) + this.state.formula + equationEditor.value.substring(equationEditor.selectionStart);\r\n\t\tequationEditor.click();\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t<>\r\n\t\t<div class=\"formulaWrapper\">\r\n\t\t\t<div class=\"formulaName\">\r\n\t\t\t\t{this.state.name}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"formulaEquationWrapper\">\r\n\t\t\t\t<div class=\"formulaEquationCol1\">\r\n\t\t\t\t\t<div class=\"formulaLabel\">\r\n\t\t\t\t\t\t\tFormula :\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"formulaEquation\">\r\n\t\t\t\t\t\t{this.state.formula}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"formulaEquationCol2\">\r\n\t\t\t\t\t<button class=\"insertButton\" onClick={this.insertFormula}>Insert</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"descriptionLabel\">\r\n\t\t\t\t\tDescription :\r\n\t\t\t</div>\r\n\t\t\t<div class=\"formulaDescription\">\r\n\t\t\t\t{this.state.description}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass TopMenu extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisOnTop: 1,\r\n\t\t}\r\n\t\tthis.setScrollEvent = this.setScrollEvent.bind(this);\r\n\t\tthis.updatePos = this.updatePos.bind(this);\r\n\t\tthis.setScrollEvent();\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tsetScrollEvent()\r\n\t{\r\n\t\twindow.addEventListener('scroll', this.updatePos);\r\n\t}\r\n\t\r\n\t\r\n\tupdatePos()\r\n\t{\r\n\t\tif (window.scrollY != 0)\r\n\t\t{\r\n\t\t\tconsole.log(\"scrolled\");\r\n\t\t}else{\r\n\t\t\tconsole.log(\"onTop\");\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<ul class=\"\">\r\n\t\t\t\t<li class=\"\"><a href=\"#\">Home</a></li>\r\n\t\t\t\t<li class=\"\"><a href=\"#\">About</a></li>\r\n\t\t\t\t<li class=\"\"><a href=\"#\">Contact</a></li>\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nwindow.onload = () => {\r\n\tif(window.screen.width < 950)\r\n\t{\r\n\t\tlet initScale = window.screen.width/950;\r\n\t\tdocument.getElementsByName(\"viewport\")[0].setAttribute('content','width=950, initial-scale='+ initScale +', maximum-scale=1.0, minimum-scale=0.25, user-scalable=yes');\r\n\t}\r\n}\r\n\r\nReactDOM.render(\r\n\t<>\r\n\t\t<App/>\r\n\t</>,\r\n  document.getElementById('root')\r\n);\r\n\r\n/*var nativeTextareaValueSetter = Object.getOwnPropertyDescriptor(window.HTMLTextAreaElement.prototype, \"value\").set;\r\nfunction setValue (el, val) {\r\n\treturn nativeTextareaValueSetter.call(el, val);\r\n  }*/\r\n/*<div class=\"row3\">\r\n\t\t\t\t<div class=\"saveLabel\">You can save your equation :</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row4\">\r\n\t\t\t\t<textarea class=\"nameField\" placeholder=\"Your equation name\"></textarea>\r\n\t\t\t\t<div class=\"saveBtnWrapper\"><button class=\"saveBtn\" onClick={() => {this.saveEquation()}}>Save</button></div>\r\n\t\t\t</div>\r\n\t\t\t*/",{"ruleId":"33","severity":1,"message":"34","line":5,"column":7,"nodeType":"35","messageId":"36","endLine":5,"endColumn":18},{"ruleId":"33","severity":1,"message":"37","line":9,"column":5,"nodeType":"35","messageId":"36","endLine":9,"endColumn":15},{"ruleId":"33","severity":1,"message":"38","line":10,"column":5,"nodeType":"35","messageId":"36","endLine":10,"endColumn":14},{"ruleId":"33","severity":1,"message":"39","line":12,"column":5,"nodeType":"35","messageId":"36","endLine":12,"endColumn":15},{"ruleId":"33","severity":1,"message":"40","line":13,"column":5,"nodeType":"35","messageId":"36","endLine":13,"endColumn":19},{"ruleId":"33","severity":1,"message":"41","line":82,"column":7,"nodeType":"35","messageId":"36","endLine":82,"endColumn":10},{"ruleId":"42","severity":1,"message":"43","line":90,"column":14,"nodeType":"44","messageId":"45","endLine":90,"endColumn":16},{"ruleId":"33","severity":1,"message":"46","line":138,"column":9,"nodeType":"35","messageId":"36","endLine":138,"endColumn":16},{"ruleId":"42","severity":1,"message":"43","line":140,"column":22,"nodeType":"44","messageId":"45","endLine":140,"endColumn":24},{"ruleId":"42","severity":1,"message":"43","line":140,"column":41,"nodeType":"44","messageId":"45","endLine":140,"endColumn":43},{"ruleId":"42","severity":1,"message":"43","line":140,"column":60,"nodeType":"44","messageId":"45","endLine":140,"endColumn":62},{"ruleId":"42","severity":1,"message":"43","line":140,"column":79,"nodeType":"44","messageId":"45","endLine":140,"endColumn":81},{"ruleId":"42","severity":1,"message":"43","line":146,"column":64,"nodeType":"44","messageId":"45","endLine":146,"endColumn":66},{"ruleId":"47","severity":1,"message":"48","line":172,"column":3,"nodeType":"49","messageId":"50","endLine":179,"endColumn":4},{"ruleId":"42","severity":1,"message":"51","line":173,"column":31,"nodeType":"44","messageId":"45","endLine":173,"endColumn":33},{"ruleId":"42","severity":1,"message":"51","line":239,"column":15,"nodeType":"44","messageId":"45","endLine":239,"endColumn":17},{"ruleId":"42","severity":1,"message":"51","line":239,"column":53,"nodeType":"44","messageId":"45","endLine":239,"endColumn":55},{"ruleId":"52","severity":1,"message":"53","line":241,"column":4,"nodeType":"54","endLine":241,"endColumn":14},{"ruleId":"55","severity":1,"message":"56","line":279,"column":12,"nodeType":"35","messageId":"57","endLine":279,"endColumn":13},{"ruleId":"55","severity":1,"message":"56","line":284,"column":12,"nodeType":"35","messageId":"57","endLine":284,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":299,"column":22,"nodeType":"44","messageId":"45","endLine":299,"endColumn":24},{"ruleId":"42","severity":1,"message":"43","line":306,"column":28,"nodeType":"44","messageId":"45","endLine":306,"endColumn":30},{"ruleId":"42","severity":1,"message":"51","line":435,"column":22,"nodeType":"44","messageId":"45","endLine":435,"endColumn":24},{"ruleId":"58","severity":1,"message":"59","line":446,"column":18,"nodeType":"60","endLine":446,"endColumn":30},{"ruleId":"58","severity":1,"message":"59","line":447,"column":18,"nodeType":"60","endLine":447,"endColumn":30},{"ruleId":"58","severity":1,"message":"59","line":448,"column":18,"nodeType":"60","endLine":448,"endColumn":30},"no-unused-vars","'MongoClient' is assigned a value but never used.","Identifier","unusedVar","'lightGray1' is assigned a value but never used.","'darkGray1' is assigned a value but never used.","'lightBlue1' is assigned a value but never used.","'darkLightBlue1' is assigned a value but never used.","'out' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'number1' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Expected '!==' and instead saw '!='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-redeclare","'i' is already defined.","redeclared","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]